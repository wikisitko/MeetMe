@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Meetings" asp-action="Index" title="Meetings">Meetings</a>
        </li>


        var roles = await UserManager.GetRolesAsync(await UserManager.GetUserAsync(User));

        @if(roles.Contains("Admin"))
        {
             <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Role" asp-action="Index" title="Roles">Roles</a>
            </li>
             <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="User" asp-action="Index" title="Users">Users</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
        </li>
        
        <li class="nav-item">
            <form class="form-inline" asp-controller="Auth" asp-action="Logout">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
     
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Auth" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Auth" asp-action="Login">Login</a>
        </li>
    }
</ul>
